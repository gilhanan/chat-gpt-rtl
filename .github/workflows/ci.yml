name: CI

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

env:
  AZURE_RESOURCE_GROUP: "gh-chat-gpt-rtl"
  AZURE_STORAGE_ACCOUNT: "ghchatgptrtl"
  LOCATION: "West Europe"

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Resource Group
        run: |
          az group create \
          --name ${{ env.AZURE_RESOURCE_GROUP }} \
          --location "${{ env.LOCATION }}"

      - name: Create Azure Storage Account
        run: |
          az storage account create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name ${{ env.AZURE_STORAGE_ACCOUNT }} \
          --sku Standard_LRS

      - name: Grant Blob Data Contributor permissions to the Service Principal
        run: |
          az role assignment create \
          --assignee ${{ secrets.AZURE_CLIENT_ID }} \
          --role "Storage Blob Data Contributor" \
          --scope /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZURE_RESOURCE_GROUP }}/providers/Microsoft.Storage/storageAccounts/${{ env.AZURE_STORAGE_ACCOUNT }}

      - name: Create Azure Storage Container for the current commit
        run: |
          az storage container create \
          --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} \
          --name ${{ github.sha }} \
          --public-access blob \
          --auth-mode login

  lint-and-tests:
    name: Lint and tests
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Lint and format
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Generate Job summary Tests coverage
        run: |
          COVERAGE_SUMMARY_PATH="./coverage/coverage-summary.json"
          LINES_PCT=$(jq -r '.total.lines.pct' "$COVERAGE_SUMMARY_PATH")
          STATEMENTS_PCT=$(jq -r '.total.statements.pct' "$COVERAGE_SUMMARY_PATH")
          FUNCTIONS_PCT=$(jq -r '.total.functions.pct' "$COVERAGE_SUMMARY_PATH")
          BRANCHES_PCT=$(jq -r '.total.branches.pct' "$COVERAGE_SUMMARY_PATH")

          cat <<- EOM >> $GITHUB_STEP_SUMMARY
            #### Coverage Summary:

            | Metric     | Coverage |
            |------------|----------|
            | Lines      | $LINES_PCT%  |
            | Statements | $STATEMENTS_PCT% |
            | Functions  | $FUNCTIONS_PCT%  |
            | Branches   | $BRANCHES_PCT%  |

            #### Links:
            - [View Tests Coverage report](https://${{ env.AZURE_STORAGE_ACCOUNT }}.blob.core.windows.net/${{ github.sha }}/coverage/lcov-report/index.html)
          EOM

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Upload current commit Jest coverage
        run: |
          az storage blob upload-batch \
          --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} \
          --destination ${{ github.sha }} \
          --destination-path coverage \
          --source ./coverage \
          --overwrite \
          --auth-mode login

  e2e-tests:
    name: E2E tests
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Upload current commit extension
        run: |
          az storage blob upload \
          --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} \
          --container-name ${{ github.sha }} \
          --name extension.zip \
          --file extension.zip \
          --overwrite \
          --auth-mode login

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        id: e2e_tests
        run: |
          echo "status=failed" >> $GITHUB_OUTPUT
          xvfb-run npm run test:e2e
          echo "status=success" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Upload current commit E2E tests reports
        run: |
          az storage blob upload-batch \
          --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} \
          --destination ${{ github.sha }} \
          --destination-path playwright-report \
          --source ./playwright-report \
          --overwrite \
          --auth-mode login

      - name: Generate Job summary with E2E reports and extension download link
        run: |
          cat <<- EOM >> $GITHUB_STEP_SUMMARY
            #### Links:
            - [View E2E Tests report](https://${{ env.AZURE_STORAGE_ACCOUNT }}.blob.core.windows.net/${{ github.sha }}/playwright-report/index.html)
            - [Download extension](https://${{ env.AZURE_STORAGE_ACCOUNT }}.blob.core.windows.net/${{ github.sha }}/extension.zip)
          EOM

      - name: Check E2E test result
        run: |
          if [ "${{ steps.e2e_tests.outputs.status }}" == "failed" ]; then
            exit 1
          fi

  deploy:
    name: Deploy
    needs: [lint-and-tests, e2e-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Azure Storage Container for main branch
        run: |
          az storage container create \
          --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} \
          --name main \
          --public-access blob \
          --auth-mode login

      - name: Copy current commit container blobs to main branch container
        run: |
          az storage copy \
          --source https://${{ env.AZURE_STORAGE_ACCOUNT }}.blob.core.windows.net/${{ github.sha }} \
          --destination https://${{ env.AZURE_STORAGE_ACCOUNT }}.blob.core.windows.net/main \
          --recursive
